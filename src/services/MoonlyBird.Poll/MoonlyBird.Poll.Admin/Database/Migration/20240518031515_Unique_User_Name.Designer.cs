// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoonlyBird.Poll.Admin.Database;

#nullable disable

namespace MoonlyBird.Poll.Admin.Database.Migration
{
    [DbContext(typeof(DbMoonlyBirdPollContext))]
    [Migration("20240518031515_Unique_User_Name")]
    partial class Unique_User_Name
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.Option", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PollId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "PollId");

                    b.HasIndex("PollId");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.Poll", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UX_User_Name");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.Vote", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PollId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PollId");

                    b.HasIndex("OptionId", "PollId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.Option", b =>
                {
                    b.HasOne("MoonlyBird.Poll.Admin.Database.Model.Poll", "Poll")
                        .WithMany("Options")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.Vote", b =>
                {
                    b.HasOne("MoonlyBird.Poll.Admin.Database.Model.User", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoonlyBird.Poll.Admin.Database.Model.Option", "Option")
                        .WithMany("Votes")
                        .HasForeignKey("OptionId", "PollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.Option", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.Poll", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("MoonlyBird.Poll.Admin.Database.Model.User", b =>
                {
                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
